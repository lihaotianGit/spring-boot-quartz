buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.14.RELEASE")
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}
apply from: "${projectDir}/flyway.gradle"

group "springboot-quartz"
version "1.0-SNAPSHOT"

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "maven"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
}

ext {
    collectionVersion = '1.0'
    jacksonVersion = '1.9.13'
    springBootStarterVersion = "1.5.14.RELEASE"
    mybatisSpringBootStarterVersion = "1.3.1"
    mysqlCommectorVersion = "5.1.39"
    springBootLog4jStarterVersion = "1.3.8.RELEASE"
    springVersion = "4.3.13.RELEASE"
    zookeeperVersion = "3.4.13"
    zkclientVersion = "0.10"
    curatorVersion = "4.0.1"
}

dependencies {
    compile "com.google.collections:google-collections:$collectionVersion"
    compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"
    compile "org.springframework.boot:spring-boot-starter-log4j:$springBootLog4jStarterVersion"
    compile ("org.springframework.boot:spring-boot-starter-aop:$springBootStarterVersion") {
        exclude(module: "spring-boot-starter-logging")
        exclude(module: "log4j-over-slf4j")
        exclude(module: "logback-classic")
    }
    compile ("org.springframework.boot:spring-boot-starter-web:$springBootStarterVersion") {
        exclude(module: "spring-boot-starter-logging")
        exclude(module: "log4j-over-slf4j")
        exclude(module: "logback-classic")
    }
    compile ("org.mybatis.spring.boot:mybatis-spring-boot-starter:$mybatisSpringBootStarterVersion") {
        exclude(module: "spring-boot-starter-logging")
        exclude(module: "log4j-over-slf4j")
        exclude(module: "logback-classic")
    }
    compile "org.apache.curator:curator-framework:$curatorVersion"
    compile "org.apache.curator:curator-recipes:$curatorVersion"
    compile ("org.apache.zookeeper:zookeeper:$zookeeperVersion") {
        exclude(module: "slf4j-log4j12")
    }
    compile ("com.101tec:zkclient:$zkclientVersion") {
        exclude(module: "slf4j-log4j12")
    }
    compile "org.springframework:spring-context-support:$springVersion"
    compile("org.quartz-scheduler:quartz:2.2.3")
    compile "mysql:mysql-connector-java:$mysqlCommectorVersion"

    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootStarterVersion"
}

bootRepackage {
    mainClass = 'scheduler.Application'
}